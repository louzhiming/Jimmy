!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
swirl()
Sys.Data()
Sys.date()
Sys.Date()
0
library(swirl)
swirl()
library(swirl)
swirl
swirl()
library(swirl)
swirl()
Sys.Date()
library(swirl)
swirl()
mean(c(2, 4, 5))
submit()
boring_function('My first function!')
boring_function
submit
submit()
my_mean(c(4, 5, 10))
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8, 4, 0))
evalute(function(x){x[length(x)]}, c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram(1, 3, 6, "are")
submit()
mad_libs(place, adjective, noun)
mad_libs(place = 1, adjective = 2, noun = 3, "asdas ")
submit()
%p%('I', "love", "R!")
%p%('I', "love")
%p%("I", "love", "R!")
%p%('I', 'love', 'R!')
%p%('I', 'love')
%p%('I', 'love', 'R!')
'I' %p% 'love' %p% 'R!'
library(swirl)
swirl()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
?strptime
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, tz = "EST", "%B %d, %Y %H:%M")
t4 <- strptime(t3, tz = "GMT", "%B %d, %Y %H:%M")
T4
t4
t4 <- strptime(t3, tz = "EST")
t4 <- strptime(t3, tz = "GMT", "%m %d, %Y %H:%M")
t4
cube <- function(x, n) {#
        x^3#
}
cube(3)
cube <- function(x, n) {#
        x^n#
}
cube(3)
x <- 1:10#
if(x > 5) {#
        x <- 0#
}
x <- 5#
y <- if(x < 3) {#
        NA#
} else {#
        10#
}
y
pwd
pwd()
cd desktop
pollutantmean <- function(directory) {#
    paste("Users/louzhiming/desktop/",directory))#
}
pollutantmean <- function(directory) {#
+     paste("Users/louzhiming/desktop/",directory)
}
pollutantmean(specdata)
pollutantmean("specdata")
?paste
paste("Users/louzhiming/desktop/",directory)paste("Users/louzhiming/desktop/",directory)
paste("Users/louzhiming/desktop/","specdata")
x <- <- function(directory) {#
+ +     paste("Users/louzhiming/desktop/",directory, sep = "")#
+ }
<- function(directory) {#
+ +     paste("Users/louzhiming/desktop/",directory, sep = "")#
+ }
x <- function(directory) {#
+     paste("Users/louzhiming/desktop/",directory, sep = "")#
+ }
x <- function(directory) {#
     paste("Users/louzhiming/desktop/",directory, sep = "")}
x("asdda ")
pollutantmean <- function(directory, pollutant, id = 1:322) {#
    setwd(paste("Users/louzhiming/desktop/",directory, sep = ""))#
}
pollutantmean("specdata")
setwd("Users/louzhiming/desktop/specdata")
pollutantmean <- function(directory, pollutant, id = 1:322) {#
    a <- data.frame()#
    x <- list.files(paste(getwd(), "/Desktop/", directory, sep = ""))[id]#
    for(i in id){#
        data <- read.csv(x[i])[pollutant]#
        a <- rbind(a, data)#
    }#
    mean(a[[1]], na.rm = T)#
}
pollutantmean("specdata", "sulfate", 1:10)
getwd()
?data.frame
a <- data.frame(id, nobs)
a <- data.frame()
colnames(a) <- c("id", "nobs")
a <- rbind(4, 96)
a
a <- data.frame(,2)
a <- data.frame()
a <- rbind(c(4, 96))
a
colnames(a) <- c("id", "nobs")
a
class(a)
a <- data.frame(a)
a
complete <- function(directory, id = 1:322) {#
  setwd(paste(getwd(), "/Desktop/", directory, sep = ""))#
  a <- data.frame()#
  x <- list.files(getwd())[id]#
  for(y in x){#
    data <- read.csv(y)#
    bad <- is.na(data[2])#
    num <- length(data[2][!bad])#
    a <- rbind(c(data[1,4], num))#
  }#
  colnames(a) <- c("id", "nobs")#
  a <- data.frame(a)#
  setwd("/Users/louzhiming")#
  a#
}
complete("specdata", c(2, 4, 8, 10, 12))
complete <- function(directory, id = 1:322) {#
  setwd(paste(getwd(), "/Desktop/", directory, sep = ""))#
  a <- data.frame()#
  x <- list.files(getwd())[id]#
  for(y in x){#
    data <- read.csv(y)#
    com <- na.omit(data[2:3])#
    num <- nrow(com)#
    a <- rbind(c(data[1,4], num))#
  }#
  colnames(a) <- c("id", "nobs")#
  a <- data.frame(a)#
  setwd("/Users/louzhiming")#
  a#
}
complete("specdata", c(2, 4, 8, 10, 12))
a <- data.frame()
a <- matrix()
a
a <- rbind(12, 90)
a
a <- matrix()
a <- rbind(c(12, 90))
a
a <- rbind(c(15, 80))
a
cor()
?cor
?head
c <- rnorm(20, 1)
a <- mean(c)
c
a
class(c)
class(a)
library(swirl)
swirl)
swirl()
library(swirl)
swirl()
head(flags)
dim(falgs)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
lass(cls_list)
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(falg_colors, sum)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, ,5, 6, 6))
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(falgs, unique)
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
library(datasets)#
data(iris)
tapply(iris$Sepal.Length, virginica, mean)
?iris
iris
glags
flags
tapply(iris$Sepal.Length, iris$Species, mean)
iris
apply(iris[, 1:4], 2, mean)
colMeans(iris)
library(datasets)#
data(mtcars)
?mtcars
mtcars
x <- split(mtcars$hp, mtcars$cyl)
x
abs(x[1] - x[3])
x[1]
abs(x[[1]] - x[[3]])
saplly(x, mean)
aspply(x, mean)
sapply(x, mean)
y <- sapply(x, mean)
y[3] - y[1]
debug(ls)
ls()
git add .
- git add .
- git add .
- git add
git add
- git add -u
-git add .
